apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: wheres-teddy-template
  title: Where's Teddy Python application to show Gen AI with OpenShift AI
  description: Python application to show Gen AI with OpenShift AI
  tags:
    - python
    - genai
    - datascience
    - nodejs
spec:
  owner: rhdeveloper-workshop-authors
  type: service

  parameters:
    - title: Provide information about the GitHub location
      required:
        - githubOrg
      properties:
        githubOrg:
          title: GitHub Organization
          type: string
          default: WindTurbineInc
        description:
          title: Description
          type: string
          description: Help others understand what this component is for
    - title: Provide information about the new component
      required:
        - cluster_id
        - namespace
        - modelmesh_host
        - modelmesh_port
        - owner
      properties:
        cluster_id:
          title: Cluster Id
          type: string
          description: Id of the cluster
          default: .apps.wearedevs.rl97.p1.openshiftapps.com
        namespace: 
          title: Namespace
          type: string
          description: Namespace
        modelmesh_host:
          title: GRPC host of the inference API
          type: string
          description: GRPC host of the inference API, default is internal networking (K8S service)
          default: modelmesh-serving.text-to-image
        modelmesh_port:
          title: GRPC port of the inference API
          type: number
          description: GRPC port of the inference API, default is internal networking
          default: 8033
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: [User]
    - title: Provide Build Information
      required:
        - image_host
        - image_tag
      properties:
        image_host:
          title: Image Host
          type: string
          description: Host for storing image (defaults to openshift internal)
          default: image-registry.openshift-image-registry.svc:5000
        image_tag:
          title: Image Tag
          default: latest
          type: string
          description: Image tag to use for storing in the internal registry
  steps:
    - id: templateSource
      name: Generating the source code component
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: ./source
        values:
          githubOrg: ${{parameters.githubOrg}}
          repoName: ${{parameters.namespace}}-wheres-teddy
          owner: ${{parameters.owner}}
          cluster_id: ${{parameters.cluster_id}}
          namespace: ${{parameters.namespace}}
          component_id: ${{parameters.namespace}}-wheres-teddy-app
          modelmesh_host: ${{parameters.modelmesh_host}}
          modelmesh_port: ${{parameters.modelmesh_port}}
    - id: publishSource
      name: Publishing to Source Code Repository
      action: publish:github
      input:
        sourcePath: ./source
        allowedHosts:
          - github.com
        description: ${{parameters.description}}
        repoUrl: github.com?owner=${{parameters.githubOrg}}&repo=${{parameters.namespace}}-wheres-teddy
        defaultBranch: main
        protectDefaultBranch: false
        repoVisibility: public    
    - id: registerSource
      name: Registering the Source Code Component
      action: catalog:register
      input:
        repoContentsUrl: ${{steps.publishSource.output.repoContentsUrl}}
        catalogInfoPath: /catalog-info.yaml
    - id: templateGitops
      name: Generating the deployment resources and artefacts
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: ${{parameters.namespace}}-wheres-teddy-app
          description: ${{parameters.description}}
          destination: https://github.com/${{parameters.githubOrg}}/${{parameters.namespace}}-wheres-teddy-gitops
          source_repository: https://github.com/${{parameters.githubOrg}}/${{parameters.namespace}}-wheres-teddy
          repository_name: ${{parameters.namespace}}-wheres-teddy
          git_owner: ${{parameters.githubOrg}}
          cluster: ${{parameters.cluster_id}}
          namespace: ${{parameters.namespace}}
          image_host: ${{parameters.image_host}}
          image_name: ${{parameters.namespace}}/wheres-teddy-app
          image_tag: ${{parameters.image_tag}}
          modelmesh_host: ${{parameters.modelmesh_host}}
          modelmesh_port: ${{parameters.modelmesh_port}}
        targetPath: ./tenant-gitops
    - id: publishGitops
      name: Publishing to Deployment Resource Repository
      action: publish:github
      input:
        repoUrl: github.com?owner=${{parameters.githubOrg}}&repo=${{parameters.namespace}}-wheres-teddy-gitops
        title: gitops resources for ${{parameters.namespace}}-wheres-teddy-app
        description: gitops resources for ${{parameters.namespace}}-wheres-teddy-app
        sourcePath: ./tenant-gitops
        defaultBranch: main
        protectDefaultBranch: false
        repoVisibility: public
    - id: createArgoResources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{parameters.namespace}}-wheres-teddy-app-bootstrap
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://github.com/${{parameters.githubOrg}}/${{parameters.namespace}}-wheres-teddy-gitops.git
        path: 'argocd/'
  output:
    links:
      - title: Source Code Repository
        url: ${{steps.publishSource.output.remoteUrl}}
      - title: Pipeline status
        url: https://console-openshift-console${{parameters.cluster_id}}/dev-pipelines/ns/${{parameters.namespace}}/
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{steps.registerSource.output.entityRef}}
